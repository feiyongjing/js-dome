.covered {
    width: 200px;
    height: 130px;
    background-color: chartreuse;
    /* 设置浮动会覆盖其他的元素，left向左浮动、right向右浮动。多个元素浮动时会从左到右依次排开，如果外面的标签或浏览器一排放不下多余的会挤到下一排*/
    float: left;
}


.beCovered {
    width: 500px;
    height: 300px;
    background-color: crimson;
    text-align: right;
}


.imgUnfloated,.imgFloat{
    height: 300px;
}

.imgFloat{
    /* 设置浮动对比没有设置浮动的图片排列之间没有空白间隙*/
    float: left;
}

/* 取消浮动 */
.container{
    width: 500px;
    /* height: 500px; */
    background-color: #888;
    /* 父元素高度塌陷并且无法设置父元素的高度，同时浮动会影响同级的元素和后续的元素
       解决方案三：通过设置overflow和clear来清除浮动影响父元素、同级的元素和后续的元素
    overflow: hidden;
    clear: both; */
}

.box{
    width: 100px;
    height: 100px;
    background-color: aqua;
    margin: 5px;
    /* 浮动会影响父元素，如果父元素没有设置高度默认是由子元素撑开父元素的高度，但是如果子元素设置了浮动则父元素的高度塌陷变为0
       解决方案一：直接设置父元素的高度，使其不依赖子元素撑开高度
     */
    float: left;
}

.text{
    width: 100px;
    height: 100px;
    background-color:darkgreen;
    /* 浮动会影响同级的元素和后续的元素，浮动会覆盖同级的元素和后续的元素
       解决方案二：在被影响的元素中添加clear清楚对应的浮动，left清除左浮动、清除向右浮动、both清除所有浮动
    */
    clear: both;
}